<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.hds</groupId>
  <artifactId>spring-boot-ledediter</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>spring-boot-ledediter</name>
  
<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.1.3.RELEASE</version>
	<relativePath/> <!-- lookup parent from repository -->
</parent>

<properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<java.version>1.8</java.version>
</properties>

<dependencies>
	<dependency>
	<groupId>dom4j</groupId>
	<artifactId>dom4j</artifactId>
<!-- 	<version>1.6.1</version> -->
	</dependency>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter</artifactId>
	</dependency>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
	   <groupId>org.springframework.boot</groupId>
	   <artifactId>spring-boot-starter-thymeleaf</artifactId>			   
	</dependency>
	<!--定时任务quartz-->
<!-- 	<dependency> -->
<!-- 	      <groupId>org.springframework.boot</groupId> -->
<!-- 	       <artifactId>spring-boot-starter-quartz</artifactId> -->
<!-- 	</dependency> -->
	<dependency>  
      <groupId>net.sourceforge.nekohtml</groupId>  
      <artifactId>nekohtml</artifactId>  
<!--       <version>1.9.22</version>   -->
	</dependency> 
	<dependency>
		<groupId>org.mybatis.spring.boot</groupId>
		<artifactId>mybatis-spring-boot-starter</artifactId>
		<version>1.1.1</version>
	</dependency>
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <!-- 阿里系的Druid依赖包 -->
    <dependency>
         <groupId>com.alibaba</groupId>
         <artifactId>druid</artifactId>
         <version>1.1.10</version>
    </dependency>
    <dependency>
	    <groupId>com.alibaba</groupId>
	    <artifactId>fastjson</artifactId>
	    <version>1.2.32</version>
	</dependency>
	<dependency>
	   <groupId>org.apache.shiro</groupId>
	   <artifactId>shiro-spring</artifactId>
	   <version>1.4.0</version>
	</dependency>
	<dependency>
	    <groupId>com.github.theborakompanioni</groupId>
	    <artifactId>thymeleaf-extras-shiro</artifactId>
	    <version>2.0.0</version>
	</dependency>
	<dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>        
	</dependency>  	
	<dependency>
	    <groupId>org.bytedeco</groupId>
	    <artifactId>javacv</artifactId>
	    <version>0.8</version>
	</dependency>
	<dependency>
		<groupId>io.netty</groupId>
		<artifactId>netty-all</artifactId>
<!-- 		<version>4.1.32.Final</version> -->
	</dependency>
	
	<dependency>
	    <groupId>org.ini4j</groupId>
	    <artifactId>ini4j</artifactId>
	    <version>0.5.4</version>
	</dependency>
	
	<!-- poi:07版之前的二进制格式 -->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>4.1.1</version>
    </dependency>
    <!-- poi-ooxml:07版之后的OpenXML格式 -->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>4.0.0</version>
    </dependency>

</dependencies>
	
<build>
  <resources>
           <resource>
               <directory>src/main/resources</directory>
               <filtering>true</filtering>
               <excludes>
				<exclude>bootstrap-test.properties</exclude>
                   <exclude>bootstrap-dev.properties</exclude>
                   <exclude>bootstrap-pro.properties</exclude>
                   <exclude>bootstrap.properties</exclude>
               </excludes>
           </resource>
           <resource>
               <directory>src/main/resources</directory>
               <filtering>false</filtering>
               <includes>
                   <include>bootstrap-${env}.properties</include>
                   <include>bootstrap.properties</include>                    
               </includes>
           </resource>
       </resources>
	<plugins>
		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<configuration>
                <fork>true</fork>
            </configuration>
		</plugin>
		
		<plugin>  
           <groupId>org.mybatis.generator</groupId>  
           <artifactId>mybatis-generator-maven-plugin</artifactId>  
           <version>1.3.5</version>  
           <configuration>  
               <!--允许移动生成的文件-->  
               <verbose>true</verbose>  
               <!--允许覆盖生成的文件-->  
               <overwrite>true</overwrite>                      
           </configuration>  

           <dependencies>  
               <!-- 在pom中可以直接配置依赖的数据库 generatorConfig.xml就不需要再配置数据库的jar了 -->  
               <dependency>  
                   <groupId>mysql</groupId>  
                   <artifactId>mysql-connector-java</artifactId>  
                   <version>5.1.25</version>  
               </dependency>  
           </dependencies>  
       </plugin> 
       
       <plugin>
	    <!-- YUI Compressor Maven压缩插件 -->
	    <groupId>net.alchim31.maven</groupId>
	    <artifactId>yuicompressor-maven-plugin</artifactId>
	    <version>1.5.1</version>
	    <executions>
	        <execution>
	        	<phase>process-resources</phase>
	            <goals>
	                <goal>compress</goal>
	            </goals>
	        </execution>
	    </executions>
	    <configuration>
	        <!-- 读取js,css文件采用UTF-8编码 -->
	        <encoding>UTF-8</encoding>
	        <!-- 不显示js可能的错误 -->
	        <jswarn>false</jswarn>
	        <!-- 若存在已压缩的文件，会先对比源文件是否有改动  有改动便压缩，无改动就不压缩 -->
	        <force>true</force>
	        <!-- 在指定的列号后插入新行 -->
	        <linebreakpos>-1</linebreakpos>
	        <!-- 压缩之前先执行聚合文件操作 -->
	        <preProcessAggregates>true</preProcessAggregates>
	        <!-- 压缩后保存文件后缀 无后缀 -->
	        <nosuffix>true</nosuffix>
	        <!-- 源目录，即需压缩的根目录 -->
	        <sourceDirectory>src/main/resources/static/javascript</sourceDirectory>
	        <!-- 输出目录，即压缩后的目录-->
	        <outputDirectory>target/classes</outputDirectory>	        
	        <!-- 压缩js和css文件 -->
	        <includes>
<!-- 	            <include>**/javascript/*.js</include> -->
<!-- 	            <include>**/*.css</include> -->
	        </includes>
	        <!-- 以下目录和文件不会被压缩 -->
	        <excludes>
	            <exclude>**/*.min.js</exclude>
	            <exclude>**/*.min.css</exclude>
	        </excludes>
	    </configuration>
	    
	   </plugin> 
	 
	</plugins>
</build>
</project>